{"ast":null,"code":"import axios from 'axios';\nimport swal from 'sweetalert';\nexport const getAllPizzas = () => async dispatch => {\n  dispatch({\n    type: 'GET_PIZZAS_REQUEST'\n  });\n\n  try {\n    const response = await axios.get(\"/api/pizzas/getAllPizzas\");\n    dispatch({\n      type: \"GET_PIZZAS_SUCCESS\",\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: 'GET_PIZZAS_FAIL',\n      payload: err\n    });\n  }\n};\nexport const addPizza = pizza => async dispatch => {\n  dispatch({\n    type: \"ADD_PIZZAS_REQUEST\"\n  });\n\n  try {\n    const response = await axios.post(\"/api/pizzas/addpizza\", {\n      pizza\n    });\n    dispatch({\n      type: \"ADD_PIZZAS_SUCCESS\",\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: \"ADD_PIZZAS_FAIL\",\n      payload: err\n    });\n  }\n};\nexport const getPizzaById = pizzaId => async dispatch => {\n  dispatch({\n    type: \"GET_PIZZABYID_REQUEST\"\n  });\n\n  try {\n    const response = await axios.post(\"/api/pizzas/getpizzabyid\", {\n      pizzaId\n    });\n    dispatch({\n      type: \"GET_PIZZABYID_SUCCESS\",\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: \"GET_PIZZABYID_FAIL\",\n      payload: err\n    });\n  }\n};\nexport const updatePizza = updatedPizza => async dispatch => {\n  dispatch({\n    type: \"UPDATE_PIZZABYID_REQUEST\"\n  });\n\n  try {\n    const response = await axios.post(\"/api/pizzas/updatepizza\", {\n      updatedPizza\n    });\n    dispatch({\n      type: \"UPDATE_PIZZABYID_SUCCESS\",\n      payload: response.data\n    });\n    window.location.href = \"/admin/pizzalist\";\n  } catch (err) {\n    dispatch({\n      type: \"UPDATE_PIZZABYID_FAIL\",\n      payload: err\n    });\n  }\n};\nexport const deletePizza = pizzaId => async dispatch => {\n  try {\n    await axios.post(\"/api/pizzas/deletepizza\", {\n      pizzaId\n    });\n    swal(\"Pizza Deleted Succss!\", \"success\");\n    window.location.href = \"/admin/pizzalist\"; // console.log(response);\n  } catch (error) {\n    swal(\"Errro While Deleteing Pizza\");\n  }\n};\nexport const filterPizza = (searchkey, category) => async dispatch => {\n  let filterdPizza;\n  dispatch({\n    type: \"GET_PIZZAS_REQUEST\"\n  });\n\n  try {\n    const res = await axios.get(\"/api/pizzas/getAllPizzas\");\n    filterdPizza = res.data.filter(pizza => pizza.name.toLowerCase().includes(searchkey));\n\n    if (category !== \"all\") {\n      filterdPizza = res.data.filter(pizza => pizza.category.toLowerCase() === category);\n    }\n\n    dispatch({\n      type: \"GET_PIZZAS_SUCCESS\",\n      payload: filterdPizza\n    });\n  } catch (error) {\n    dispatch({\n      type: \"GET_PIZZAS_FAIL\",\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/dhira/Downloads/pizza-shop/server/client/src/actions/pizzaAction.js"],"names":["axios","swal","getAllPizzas","dispatch","type","response","get","payload","data","err","addPizza","pizza","post","getPizzaById","pizzaId","updatePizza","updatedPizza","window","location","href","deletePizza","error","filterPizza","searchkey","category","filterdPizza","res","filter","name","toLowerCase","includes"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport swal from 'sweetalert';\r\n\r\nexport const getAllPizzas = () => async (dispatch) => {\r\n  dispatch({ type: 'GET_PIZZAS_REQUEST' });\r\n  try {\r\n    const response = await axios.get(\"/api/pizzas/getAllPizzas\");\r\n\r\n    dispatch({ type: \"GET_PIZZAS_SUCCESS\", payload: response.data });\r\n\r\n  } catch (err) {\r\n    dispatch({ type: 'GET_PIZZAS_FAIL', payload: err });\r\n  }\r\n};\r\n\r\nexport const addPizza = (pizza) => async (dispatch) => {\r\n  dispatch({ type: \"ADD_PIZZAS_REQUEST\" });\r\n  try {\r\n    const response = await axios.post(\"/api/pizzas/addpizza\", { pizza });\r\n    dispatch({ type: \"ADD_PIZZAS_SUCCESS\", payload: response.data });\r\n  } catch (err) {\r\n    dispatch({ type: \"ADD_PIZZAS_FAIL\", payload: err });\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const getPizzaById = (pizzaId) => async (dispatch) => {\r\n  dispatch({ type: \"GET_PIZZABYID_REQUEST\" });\r\n  try {\r\n    const response = await axios.post(\"/api/pizzas/getpizzabyid\", { pizzaId });\r\n    dispatch({ type: \"GET_PIZZABYID_SUCCESS\", payload: response.data });\r\n  } catch (err) {\r\n    dispatch({ type: \"GET_PIZZABYID_FAIL\", payload: err });\r\n  }\r\n};\r\n\r\n\r\nexport const updatePizza = (updatedPizza) => async (dispatch) => {\r\n  dispatch({ type: \"UPDATE_PIZZABYID_REQUEST\" });\r\n  try {\r\n    const response = await axios.post(\"/api/pizzas/updatepizza\", {\r\n      updatedPizza,\r\n    });\r\n    dispatch({ type: \"UPDATE_PIZZABYID_SUCCESS\", payload: response.data });\r\n    window.location.href = \"/admin/pizzalist\";\r\n  } catch (err) {\r\n    dispatch({ type: \"UPDATE_PIZZABYID_FAIL\", payload: err });\r\n  }\r\n};\r\n\r\nexport const deletePizza = (pizzaId) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/pizzas/deletepizza\", { pizzaId });\r\n    swal(\"Pizza Deleted Succss!\", \"success\");\r\n    window.location.href = \"/admin/pizzalist\";\r\n    // console.log(response);\r\n  } catch (error) {\r\n    swal(\"Errro While Deleteing Pizza\");\r\n  }\r\n};\r\n\r\nexport const filterPizza = (searchkey, category) => async (dispatch) => {\r\n  let filterdPizza;\r\n  dispatch({ type: \"GET_PIZZAS_REQUEST\" });\r\n  try {\r\n    const res = await axios.get(\"/api/pizzas/getAllPizzas\");\r\n    filterdPizza = res.data.filter((pizza) =>\r\n      pizza.name.toLowerCase().includes(searchkey)\r\n    );\r\n    if (category !== \"all\") {\r\n      filterdPizza = res.data.filter(\r\n        (pizza) => pizza.category.toLowerCase() === category\r\n      );\r\n    }\r\n    dispatch({ type: \"GET_PIZZAS_SUCCESS\", payload: filterdPizza });\r\n  } catch (error) {\r\n    dispatch({ type: \"GET_PIZZAS_FAIL\", payload: error });\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}