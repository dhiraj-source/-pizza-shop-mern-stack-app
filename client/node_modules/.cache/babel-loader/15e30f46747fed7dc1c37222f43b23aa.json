{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { getAllPizzaReducer } from \"./reducers/pizzaReducer\";\nimport { cartReducer } from \"./reducers/cartRreducer\";\nimport { registerUserReducer, loginUserReducer } from \"./reducers/userReducer\";\nimport { placeOrderReducer } from \"./reducers/orderReducer\";\nconst cartItems = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst currentUser = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')) : null;\nconst rootReducer = combineReducers({\n  getAllPizzaReducer: getAllPizzaReducer,\n  cartReducer: cartReducer,\n  registerUserReducer: registerUserReducer,\n  loginUserReducer: loginUserReducer,\n  placeOrderReducer: placeOrderReducer\n});\nconst initialState = {\n  cartReducer: {\n    cartItems: cartItems\n  },\n  loginUserReducer: {\n    currentUser: currentUser\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/dhira/Downloads/pizza-shop/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","getAllPizzaReducer","cartReducer","registerUserReducer","loginUserReducer","placeOrderReducer","cartItems","localStorage","getItem","JSON","parse","currentUser","rootReducer","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,QAAsD,wBAAtD;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AAEA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACdC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADc,GAEd,EAFJ;AAIA,MAAMG,WAAW,GAAEJ,YAAY,CAACC,OAAb,CAAqB,aAArB,IAAsCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAtC,GAAsF,IAAzG;AACA,MAAMI,WAAW,GAAEf,eAAe,CAAC;AAC/BI,EAAAA,kBAAkB,EAAEA,kBADW;AAE/BC,EAAAA,WAAW,EAAEA,WAFkB;AAG/BC,EAAAA,mBAAmB,EAACA,mBAHW;AAI/BC,EAAAA,gBAAgB,EAACA,gBAJc;AAK/BC,EAAAA,iBAAiB,EAAEA;AALY,CAAD,CAAlC;AASA,MAAMQ,YAAY,GAAG;AACjBX,EAAAA,WAAW,EAAE;AACXI,IAAAA,SAAS,EAAEA;AADA,GADI;AAInBF,EAAAA,gBAAgB,EAAC;AACfO,IAAAA,WAAW,EAACA;AADG;AAJE,CAArB;AAQA,MAAMG,UAAU,GAAG,CAACf,KAAD,CAAnB;AAEA,MAAMgB,KAAK,GAAGnB,WAAW,CACrBgB,WADqB,EAErBC,YAFqB,EAGrBb,mBAAmB,CAACF,eAAe,CAAC,GAAGgB,UAAJ,CAAhB,CAHE,CAAzB;AAKE,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { getAllPizzaReducer } from \"./reducers/pizzaReducer\";\r\nimport { cartReducer } from \"./reducers/cartRreducer\";\r\nimport { registerUserReducer, loginUserReducer } from \"./reducers/userReducer\";\r\nimport { placeOrderReducer } from \"./reducers/orderReducer\";\r\n\r\nconst cartItems = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst currentUser =localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')):null \r\nconst rootReducer =combineReducers({\r\n    getAllPizzaReducer: getAllPizzaReducer,\r\n    cartReducer: cartReducer,\r\n    registerUserReducer:registerUserReducer,\r\n    loginUserReducer:loginUserReducer,\r\n    placeOrderReducer: placeOrderReducer,\r\n    \r\n});\r\n\r\nconst initialState = {\r\n    cartReducer: {\r\n      cartItems: cartItems,\r\n    },\r\n  loginUserReducer:{\r\n    currentUser:currentUser\r\n  }}\r\n    \r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n  );\r\n  export default store;"]},"metadata":{},"sourceType":"module"}