{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhira\\\\Downloads\\\\pizza-shop\\\\client\\\\src\\\\screens\\\\OrderScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { getUserOrders } from \"../actions/orderAction\";\nimport { useDispatch, useSelector } from \"react-redux\"; // import { Row, Col } from \"react-bootstrap\";\n// import Loader from \"../components/Loader\";\n// import Error from \"../components/Error\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderScreen = () => {\n  _s();\n\n  //const orderState = useSelector((state) => state.getUserOrdersReducer);\n  //const { loading, error, orders } = orderState;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getUserOrders());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"oder screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}; //   return (\n//     <>\n//       <h1 className=\"text-center \">Your Orders </h1>\n//       {loading && <Loader />}\n//       {error && <Error error=\"something went wrong\" />}\n//       {orders &&\n//         orders.map((order) => (\n//           <div className=\"container border p-4 bg-light\">\n//             <Row>\n//               <Col md={4}>\n//                 <h4>Items :</h4>\n//                 {order.orderItems.map((item) => (\n//                   <h6 key={item.name}>\n//                     {item.name} [{item.varient}] * {item.quantity} ={\" \"}\n//                     {item.price}\n//                   </h6>\n//                 ))}\n//               </Col>\n//               <Col md={3}>\n//                 <h4>Address :</h4>\n//                 <h6>Street : {order.shippingAddress.street}</h6>\n//                 <h6>City : {order.shippingAddress.city}</h6>\n//                 <h6>PinCode : {order.shippingAddress.picode}</h6>\n//                 <h6>Countery : {order.shippingAddress.country}</h6>\n//               </Col>\n//               <Col md={5}>\n//                 <h4>Order Info :</h4>\n//                 <h6>Order Amount : {order.orderAmount}</h6>\n//                 <h6>Transection id : {order.transectionId}</h6>\n//                 <h6>Order id : {order._id}</h6>\n//               </Col>\n//             </Row>\n//           </div>\n//         ))}\n//     </>\n//   );\n// };\n\n\n_s(OrderScreen, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["C:/Users/dhira/Downloads/pizza-shop/client/src/screens/OrderScreen.jsx"],"names":["React","useEffect","getUserOrders","useDispatch","useSelector","OrderScreen","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;AACA;AACA;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB;AACA;AACA,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,QAAQ,CAACJ,aAAa,EAAd,CAAR;AACD,GAFQ,CAAT;AAIA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAIE,CAZJ,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAjDMG,W;UAGaF,W;;;KAHbE,W;AAmDN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { getUserOrders } from \"../actions/orderAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { Row, Col } from \"react-bootstrap\";\r\n// import Loader from \"../components/Loader\";\r\n// import Error from \"../components/Error\";\r\n\r\nconst OrderScreen = () => {\r\n  //const orderState = useSelector((state) => state.getUserOrdersReducer);\r\n  //const { loading, error, orders } = orderState;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getUserOrders());\r\n  });\r\n\r\n  return(\r\n    <div>\r\n      <h1>oder screen</h1>\r\n    </div>\r\n  )}\r\n//   return (\r\n//     <>\r\n//       <h1 className=\"text-center \">Your Orders </h1>\r\n//       {loading && <Loader />}\r\n//       {error && <Error error=\"something went wrong\" />}\r\n//       {orders &&\r\n//         orders.map((order) => (\r\n//           <div className=\"container border p-4 bg-light\">\r\n//             <Row>\r\n//               <Col md={4}>\r\n//                 <h4>Items :</h4>\r\n//                 {order.orderItems.map((item) => (\r\n//                   <h6 key={item.name}>\r\n//                     {item.name} [{item.varient}] * {item.quantity} ={\" \"}\r\n//                     {item.price}\r\n//                   </h6>\r\n//                 ))}\r\n//               </Col>\r\n//               <Col md={3}>\r\n//                 <h4>Address :</h4>\r\n//                 <h6>Street : {order.shippingAddress.street}</h6>\r\n//                 <h6>City : {order.shippingAddress.city}</h6>\r\n//                 <h6>PinCode : {order.shippingAddress.picode}</h6>\r\n//                 <h6>Countery : {order.shippingAddress.country}</h6>\r\n//               </Col>\r\n//               <Col md={5}>\r\n//                 <h4>Order Info :</h4>\r\n//                 <h6>Order Amount : {order.orderAmount}</h6>\r\n//                 <h6>Transection id : {order.transectionId}</h6>\r\n//                 <h6>Order id : {order._id}</h6>\r\n//               </Col>\r\n//             </Row>\r\n//           </div>\r\n//         ))}\r\n//     </>\r\n//   );\r\n// };\r\n\r\nexport default OrderScreen;"]},"metadata":{},"sourceType":"module"}