{"ast":null,"code":"import axios from \"axios\";\nexport const placeOrder = (token, subTotal) => async (dispatch, getState) => {\n  dispatch({\n    type: \"PLACE_ORDER_REQUEST\"\n  });\n  const currentUser = getState().loginUserReducer.currentUser;\n  const cartItems = getState().cartReducer.cartItems;\n\n  try {\n    const res = await axios.post(\"/api/orders/placeorder\", //await axios.post(\"/api/orders/placeorder\", \n    {\n      token,\n      subTotal,\n      currentUser,\n      cartItems\n    });\n    dispatch({\n      type: \"PLACE_ORDER_SUCCESS\"\n    });\n    console.log(res);\n  } catch (error) {\n    dispatch({\n      type: \"PLACE_ORDER_FAIL\"\n    });\n    console.log(error);\n  }\n};\nexport const getUserOrders = () => async (dispatch, getState) => {\n  const currentUser = getState().loginUserReducer.currentUser;\n  dispatch({\n    type: \"USER_ORDER_REQUEST\"\n  });\n\n  try {\n    const response = await axios.post(\"/api/orders/getuserorder\", {\n      userid: currentUser._id\n    }); // console.log(response);\n\n    dispatch({\n      type: \"USER_ORDER_SUCCESS\",\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"USER_ORDER_FAIL\",\n      payload: error\n    });\n  }\n}; // export const getAllOrders = () => async (dispatch, getState) => {\n//   // const currentUser = getState().loginUserReducer.currentUser;\n//   dispatch({\n//     type: \"ALL_ORDER_REQUEST\",\n//   });\n//   try {\n//     const response = await axios.get(\"/api/orders/alluserorder\");\n//     dispatch({ type: \"ALL_ORDER_SUCCESS\", payload: response.data });\n//   } catch (error) {\n//     dispatch({ type: \"ALL_ORDER_FAIL\", payload: error });\n//   }\n// };\n// export const deliverOrder = (orderid) => async (dispatch, getState) => {\n//   // const currentUser = getState().loginUserReducer.currentUser;\n//   dispatch({\n//     type: \"GET_ALL_ORDER_REQUEST\",\n//   });\n//   try {\n//     await axios.post(\"/api/orders/deliverorder\", { orderid });\n//     alert(\"Deliverd Success\");\n//     const orders = await axios.get(\"/api/orders/alluserorder\");\n//     dispatch({ type: \"GET_ALL_ORDER_SUCCESS\", payload: orders.data });\n//     window.location.href = \"/admin/orderlist\";\n//   } catch (error) {\n//     dispatch({ type: \"GET_ALL_ORDER_FAIL\", payload: error });\n//   }\n// };","map":{"version":3,"sources":["C:/Users/dhira/Downloads/pizza-shop/client/src/actions/orderAction.js"],"names":["axios","placeOrder","token","subTotal","dispatch","getState","type","currentUser","loginUserReducer","cartItems","cartReducer","res","post","console","log","error","getUserOrders","response","userid","_id","payload","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC3ED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;AACA,QAAMC,WAAW,GAAGF,QAAQ,GAAGG,gBAAX,CAA4BD,WAAhD;AACA,QAAME,SAAS,GAAGJ,QAAQ,GAAGK,WAAX,CAAuBD,SAAzC;;AACA,MAAI;AACF,UAAME,GAAG,GAAE,MAAMX,KAAK,CAACY,IAAN,CAAW,wBAAX,EACjB;AACA;AACEV,MAAAA,KADF;AAEEC,MAAAA,QAFF;AAGEI,MAAAA,WAHF;AAIEE,MAAAA;AAJF,KAFiB,CAAjB;AAQAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD,GAXD,CAWE,OAAOI,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,CAnBM;AAqBP,OAAO,MAAMC,aAAa,GAAG,MAAM,OAAOZ,QAAP,EAAiBC,QAAjB,KAA8B;AAC/D,QAAME,WAAW,GAAGF,QAAQ,GAAGG,gBAAX,CAA4BD,WAAhD;AACAH,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAE;AADC,GAAD,CAAR;;AAGA,MAAI;AACF,UAAMW,QAAQ,GAAG,MAAMjB,KAAK,CAACY,IAAN,CAAW,0BAAX,EAAuC;AAC5DM,MAAAA,MAAM,EAAEX,WAAW,CAACY;AADwC,KAAvC,CAAvB,CADE,CAIF;;AACAf,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,oBAAR;AAA8Bc,MAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAhD,KAAD,CAAR;AACD,GAND,CAME,OAAON,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,iBAAR;AAA2Bc,MAAAA,OAAO,EAAEL;AAApC,KAAD,CAAR;AACD;AACF,CAdM,C,CAeP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const placeOrder = (token, subTotal) => async (dispatch, getState) => {\r\n  dispatch({ type: \"PLACE_ORDER_REQUEST\" });\r\n  const currentUser = getState().loginUserReducer.currentUser;\r\n  const cartItems = getState().cartReducer.cartItems;\r\n  try {\r\n    const res =await axios.post(\"/api/orders/placeorder\",\r\n    //await axios.post(\"/api/orders/placeorder\", \r\n    {\r\n      token,\r\n      subTotal,\r\n      currentUser,\r\n      cartItems,\r\n    });\r\n    dispatch({ type: \"PLACE_ORDER_SUCCESS\" });\r\n    console.log(res);\r\n  } catch (error) {\r\n    dispatch({ type: \"PLACE_ORDER_FAIL\" });\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getUserOrders = () => async (dispatch, getState) => {\r\n  const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"USER_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    const response = await axios.post(\"/api/orders/getuserorder\", {\r\n      userid: currentUser._id,\r\n    });\r\n    // console.log(response);\r\n    dispatch({ type: \"USER_ORDER_SUCCESS\", payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: \"USER_ORDER_FAIL\", payload: error });\r\n  }\r\n};\r\n// export const getAllOrders = () => async (dispatch, getState) => {\r\n//   // const currentUser = getState().loginUserReducer.currentUser;\r\n//   dispatch({\r\n//     type: \"ALL_ORDER_REQUEST\",\r\n//   });\r\n//   try {\r\n//     const response = await axios.get(\"/api/orders/alluserorder\");\r\n//     dispatch({ type: \"ALL_ORDER_SUCCESS\", payload: response.data });\r\n//   } catch (error) {\r\n//     dispatch({ type: \"ALL_ORDER_FAIL\", payload: error });\r\n//   }\r\n// };\r\n\r\n// export const deliverOrder = (orderid) => async (dispatch, getState) => {\r\n//   // const currentUser = getState().loginUserReducer.currentUser;\r\n//   dispatch({\r\n//     type: \"GET_ALL_ORDER_REQUEST\",\r\n//   });\r\n//   try {\r\n//     await axios.post(\"/api/orders/deliverorder\", { orderid });\r\n//     alert(\"Deliverd Success\");\r\n//     const orders = await axios.get(\"/api/orders/alluserorder\");\r\n//     dispatch({ type: \"GET_ALL_ORDER_SUCCESS\", payload: orders.data });\r\n//     window.location.href = \"/admin/orderlist\";\r\n//   } catch (error) {\r\n//     dispatch({ type: \"GET_ALL_ORDER_FAIL\", payload: error });\r\n//   }\r\n// };"]},"metadata":{},"sourceType":"module"}